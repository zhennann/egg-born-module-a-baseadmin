{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/external \"require3\"","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/controller/role.js","webpack://backend/./backend/src/controller/user.js","webpack://backend/./backend/src/controller/atomRight.js","webpack://backend/./backend/src/controller/menuRight.js","webpack://backend/./backend/src/controller/functionRight.js","webpack://backend/./backend/src/controller/auth.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/role.js","webpack://backend/./backend/src/service/user.js","webpack://backend/./backend/src/service/atomRight.js","webpack://backend/./backend/src/service/functionRight.js","webpack://backend/./backend/src/service/auth.js","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/model/authProvider.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/validation/schemas.js"],"names":[],"mappings":"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AE;AACjI,KAAK,0EAA0E,SAAS,sCAAsC,EAAE,EAAE;AAClI;AACA,KAAK,iFAAiF,SAAS,0CAA0C,EAAE,EAAE;AAC7I,KAAK,8EAA8E,SAAS,0CAA0C,EAAE,EAAE;AAC1I,KAAK,iFAAiF,SAAS,0CAA0C,EAAE,EAAE;AAC7I,KAAK,kFAAkF,SAAS,0CAA0C,EAAE,EAAE;AAC9I;AACA,KAAK,6DAA6D,SAAS,iCAAiC,EAAE,EAAE;AAChH,KAAK,gEAAgE,SAAS,iCAAiC,EAAE,EAAE;AACnH,KAAK,6DAA6D,SAAS,iCAAiC,EAAE,EAAE;AAChH,KAAK,6DAA6D,SAAS,iCAAiC,EAAE,EAAE;AAChH;AACA;AACA;;;;;;;AC5DA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACfA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;AACA;;;;;;;AC9FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;ACjFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C,aAAa,mBAAO,CAAC,EAAmB;AACxC,aAAa,mBAAO,CAAC,EAAmB;AACxC,kBAAkB,mBAAO,CAAC,EAAwB;AAClD,sBAAsB,mBAAO,CAAC,EAA4B;AAC1D,aAAa,mBAAO,CAAC,EAAmB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA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CA;;;;;;;ACXA,iBAAiB,mBAAO,CAAC,CAAU;AACnC;;AAEA;AACA;AACA,kBAAkB,mBAAO,CAAC,EAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP,kBAAkB;AAClB;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"require3\");","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n  'Basic Admin': '基础管理',\n  'User Management': '用户管理',\n  'Role Management': '角色管理',\n  'Atom Right Management': '原子权限管理',\n  'Menu Right Management': '菜单权限管理',\n  'Function Right Management': '功能权限管理',\n  'Auth Management': '认证管理',\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","const version = require('./controller/version.js');\nconst role = require('./controller/role.js');\nconst user = require('./controller/user.js');\nconst atomRight = require('./controller/atomRight.js');\nconst menuRight = require('./controller/menuRight.js');\nconst functionRight = require('./controller/functionRight.js');\nconst auth = require('./controller/auth.js');\n\nmodule.exports = app => {\n  const routes = [\n    // version\n    { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n    // role\n    { method: 'post', path: 'role/children', controller: role, meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/item', controller: role, meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/save', controller: role, middlewares: 'validate',\n      meta: { validate: { validator: 'role' }, right: { type: 'function', name: 'role' } },\n    },\n    { method: 'post', path: 'role/add', controller: role, meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/move', controller: role, meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/delete', controller: role, middlewares: 'transaction', meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/includes', controller: role, meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/addRoleInc', controller: role, meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/removeRoleInc', controller: role, meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/dirty', controller: role, meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/build', controller: role, middlewares: 'progress', meta: { right: { type: 'function', name: 'role' } } },\n    { method: 'post', path: 'role/buildInBackground', controller: role, middlewares: 'inner,progress', meta: { auth: { enable: false } } },\n    // user\n    { method: 'post', path: 'user/list', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    { method: 'post', path: 'user/item', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    { method: 'post', path: 'user/disable', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    { method: 'post', path: 'user/delete', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    { method: 'post', path: 'user/roles', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    { method: 'post', path: 'user/addRole', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    { method: 'post', path: 'user/removeRole', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    { method: 'post', path: 'user/atomRights', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    { method: 'post', path: 'user/functionRights', controller: user, meta: { right: { type: 'function', name: 'user' } } },\n    // atomRight\n    { method: 'post', path: 'atomRight/rights', controller: atomRight, meta: { right: { type: 'function', name: 'atomRight' } } },\n    { method: 'post', path: 'atomRight/add', controller: atomRight, meta: { right: { type: 'function', name: 'atomRight' } } },\n    { method: 'post', path: 'atomRight/delete', controller: atomRight, meta: { right: { type: 'function', name: 'atomRight' } } },\n    { method: 'post', path: 'atomRight/spreads', controller: atomRight, meta: { right: { type: 'function', name: 'atomRight' } } },\n    // menuRight\n    { method: 'post', path: 'menuRight/rights', controller: menuRight, meta: { right: { type: 'function', name: 'menuRight' } } },\n    { method: 'post', path: 'menuRight/add', controller: menuRight, meta: { right: { type: 'function', name: 'menuRight' } } },\n    { method: 'post', path: 'menuRight/delete', controller: menuRight, meta: { right: { type: 'function', name: 'menuRight' } } },\n    { method: 'post', path: 'menuRight/spreads', controller: menuRight, meta: { right: { type: 'function', name: 'menuRight' } } },\n    // functionRight\n    { method: 'post', path: 'functionRight/rights', controller: functionRight, meta: { right: { type: 'function', name: 'functionRight' } } },\n    { method: 'post', path: 'functionRight/add', controller: functionRight, meta: { right: { type: 'function', name: 'functionRight' } } },\n    { method: 'post', path: 'functionRight/delete', controller: functionRight, meta: { right: { type: 'function', name: 'functionRight' } } },\n    { method: 'post', path: 'functionRight/spreads', controller: functionRight, meta: { right: { type: 'function', name: 'functionRight' } } },\n    // auth\n    { method: 'post', path: 'auth/list', controller: auth, meta: { right: { type: 'function', name: 'auth' } } },\n    { method: 'post', path: 'auth/disable', controller: auth, meta: { right: { type: 'function', name: 'auth' } } },\n    { method: 'post', path: 'auth/item', controller: auth, meta: { right: { type: 'function', name: 'auth' } } },\n    { method: 'post', path: 'auth/save', controller: auth, meta: { right: { type: 'function', name: 'auth' } } },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","module.exports = app => {\n  class RoleController extends app.Controller {\n\n    async children() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.role.children({\n        roleId: this.ctx.request.body.roleId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async item() {\n      const res = await this.service.role.item({\n        roleId: this.ctx.request.body.roleId,\n      });\n      this.ctx.success(res);\n    }\n\n    async save() {\n      await this.service.role.save({\n        roleId: this.ctx.request.body.roleId,\n        data: this.ctx.request.body.data,\n      });\n      this.ctx.success();\n    }\n\n    async add() {\n      const res = await this.service.role.add({\n        roleIdParent: this.ctx.request.body.roleIdParent,\n        catalog: this.ctx.request.body.catalog,\n      });\n      this.ctx.success(res);\n    }\n\n    async move() {\n      const res = await this.service.role.move({\n        roleId: this.ctx.request.body.roleId,\n        roleIdParent: this.ctx.request.body.roleIdParent,\n      });\n      this.ctx.success(res);\n    }\n\n    async delete() {\n      const res = await this.service.role.delete({\n        roleId: this.ctx.request.body.roleId,\n      });\n      this.ctx.success(res);\n    }\n\n    async includes() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.role.includes({\n        roleId: this.ctx.request.body.roleId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async addRoleInc() {\n      const res = await this.service.role.addRoleInc({\n        roleId: this.ctx.request.body.roleId,\n        roleIdInc: this.ctx.request.body.roleIdInc,\n      });\n      this.ctx.success(res);\n    }\n\n    async removeRoleInc() {\n      const res = await this.service.role.removeRoleInc({\n        id: this.ctx.request.body.id,\n      });\n      this.ctx.success(res);\n    }\n\n    async dirty() {\n      const res = await this.service.role.dirty();\n      this.ctx.success(res);\n    }\n\n    async build() {\n      const res = await this.service.role.build();\n      this.ctx.success(res);\n    }\n\n    async buildInBackground() {\n      const res = await this.service.role.buildInBackground({\n        progressId: this.ctx.request.body.progressId,\n      });\n      this.ctx.success(res);\n    }\n\n\n  }\n  return RoleController;\n};\n","module.exports = app => {\n  class UserController extends app.Controller {\n\n    async list() {\n      const page = this.ctx.meta.util.page(this.ctx.request.body.page);\n      const items = await this.service.user.list({\n        roleId: this.ctx.request.body.roleId,\n        query: this.ctx.request.body.query,\n        anonymous: this.ctx.request.body.anonymous,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async item() {\n      const res = await this.service.user.item({\n        userId: this.ctx.request.body.userId,\n      });\n      this.ctx.success(res);\n    }\n\n    async disable() {\n      const res = await this.service.user.disable({\n        userId: this.ctx.request.body.userId,\n        disabled: this.ctx.request.body.disabled,\n      });\n      this.ctx.success(res);\n    }\n\n    async delete() {\n      const res = await this.service.user.delete({\n        userId: this.ctx.request.body.userId,\n      });\n      this.ctx.success(res);\n    }\n\n    async roles() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.user.roles({\n        userId: this.ctx.request.body.userId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async addRole() {\n      const res = await this.service.user.addRole({\n        userId: this.ctx.request.body.userId,\n        roleId: this.ctx.request.body.roleId,\n      });\n      this.ctx.success(res);\n    }\n\n    async removeRole() {\n      const res = await this.service.user.removeRole({\n        id: this.ctx.request.body.id,\n      });\n      this.ctx.success(res);\n    }\n\n    async atomRights() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.user.atomRights({\n        userId: this.ctx.request.body.userId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async functionRights() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.user.functionRights({\n        menu: this.ctx.request.body.menu,\n        userId: this.ctx.request.body.userId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n  }\n  return UserController;\n};\n","module.exports = app => {\n  class AtomRightController extends app.Controller {\n\n    async rights() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.atomRight.rights({\n        roleId: this.ctx.request.body.roleId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async add() {\n      const res = await this.service.atomRight.add({\n        roleId: this.ctx.request.body.roleId,\n        atomClass: this.ctx.request.body.atomClass,\n        actionCode: this.ctx.request.body.actionCode,\n        scopeSelf: this.ctx.request.body.scopeSelf,\n        scope: this.ctx.request.body.scope,\n      });\n      this.ctx.success(res);\n    }\n\n    async delete() {\n      const res = await this.service.atomRight.delete({\n        id: this.ctx.request.body.id,\n      });\n      this.ctx.success(res);\n    }\n\n    async spreads() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.atomRight.spreads({\n        roleId: this.ctx.request.body.roleId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n  }\n  return AtomRightController;\n};\n","module.exports = app => {\n  class MenuRightController extends app.Controller {\n\n    async rights() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.functionRight.rights({\n        menu: 1,\n        roleId: this.ctx.request.body.roleId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async add() {\n      const res = await this.service.functionRight.add({\n        roleId: this.ctx.request.body.roleId,\n        module: this.ctx.request.body.module,\n        name: this.ctx.request.body.name,\n      });\n      this.ctx.success(res);\n    }\n\n    async delete() {\n      const res = await this.service.functionRight.delete({\n        id: this.ctx.request.body.id,\n      });\n      this.ctx.success(res);\n    }\n\n    async spreads() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.functionRight.spreads({\n        menu: 1,\n        roleId: this.ctx.request.body.roleId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n  }\n  return MenuRightController;\n};\n","module.exports = app => {\n  class FunctionRightController extends app.Controller {\n\n    async rights() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.functionRight.rights({\n        menu: 0,\n        roleId: this.ctx.request.body.roleId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async add() {\n      const res = await this.service.functionRight.add({\n        roleId: this.ctx.request.body.roleId,\n        module: this.ctx.request.body.module,\n        name: this.ctx.request.body.name,\n      });\n      this.ctx.success(res);\n    }\n\n    async delete() {\n      const res = await this.service.functionRight.delete({\n        id: this.ctx.request.body.id,\n      });\n      this.ctx.success(res);\n    }\n\n    async spreads() {\n      const page = this.ctx.request.body.page;\n      const items = await this.service.functionRight.spreads({\n        menu: 0,\n        roleId: this.ctx.request.body.roleId,\n        page,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n  }\n  return FunctionRightController;\n};\n","module.exports = app => {\n  class AuthController extends app.Controller {\n\n    async list() {\n      const res = await this.service.auth.list();\n      this.ctx.success(res);\n    }\n\n    async disable() {\n      const res = await this.service.auth.disable({\n        id: this.ctx.request.body.id,\n        disabled: this.ctx.request.body.disabled,\n      });\n      this.ctx.success(res);\n    }\n\n    async item() {\n      const res = await this.service.auth.item({\n        id: this.ctx.request.body.id,\n      });\n      this.ctx.success(res);\n    }\n\n    async save() {\n      const res = await this.service.auth.save({\n        id: this.ctx.request.body.id,\n        config: this.ctx.request.body.data,\n      });\n      this.ctx.success(res);\n    }\n\n  }\n  return AuthController;\n};\n","const version = require('./service/version.js');\nconst role = require('./service/role.js');\nconst user = require('./service/user.js');\nconst atomRight = require('./service/atomRight.js');\nconst functionRight = require('./service/functionRight.js');\nconst auth = require('./service/auth.js');\n\nmodule.exports = app => {\n  const services = {\n    version,\n    role,\n    user,\n    atomRight,\n    functionRight,\n    auth,\n  };\n  return services;\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n      if (options.version === 1) {\n      }\n    }\n\n    async init(options) {\n      if (options.version === 1) {\n        // roleFunctions\n        const roleFunctions = [\n          { roleName: 'system', name: 'user' },\n          { roleName: 'system', name: 'role' },\n          { roleName: 'system', name: 'atomRight' },\n          { roleName: 'system', name: 'menuRight' },\n          { roleName: 'system', name: 'functionRight' },\n          { roleName: 'system', name: 'auth' },\n        ];\n        await this.ctx.meta.role.addRoleFunctionBatch({ roleFunctions });\n      }\n    }\n\n  }\n\n  return Version;\n};\n","module.exports = app => {\n\n  class Role extends app.Service {\n\n    async children({ roleId, page }) {\n      return await this.ctx.meta.role.children({ roleId, page });\n    }\n\n    async item({ roleId }) {\n      return await this.ctx.meta.role.get({ id: roleId });\n    }\n\n    async save({ roleId, data }) {\n      return await this.ctx.meta.role.save({ roleId, data });\n    }\n\n    async add({ roleIdParent, catalog }) {\n      return await this.ctx.meta.role.add({ roleIdParent, catalog });\n    }\n\n    async move({ roleId, roleIdParent }) {\n      return await this.ctx.meta.role.move({ roleId, roleIdParent });\n    }\n\n    async delete({ roleId }) {\n      return await this.ctx.meta.role.delete({ roleId });\n    }\n\n    async includes({ roleId, page }) {\n      return await this.ctx.meta.role.includes({ roleId, page });\n    }\n\n    async addRoleInc({ roleId, roleIdInc }) {\n      return await this.ctx.meta.role.addRoleInc({ roleId, roleIdInc });\n    }\n\n    async removeRoleInc({ id }) {\n      return await this.ctx.meta.role.removeRoleInc({ id });\n    }\n\n    async dirty() {\n      return await this.ctx.meta.role.getDirty();\n    }\n\n    async build() {\n      const progressId = await this.ctx.meta.progress.create();\n      this.ctx.performActionInBackground({\n        method: 'post',\n        url: 'role/buildInBackground',\n        body: {\n          progressId,\n        },\n      });\n      return { progressId };\n    }\n\n    async buildInBackground({ progressId }) {\n      return await this.ctx.meta.role.build({ progressId });\n    }\n\n  }\n\n  return Role;\n};\n","module.exports = app => {\n\n  class User extends app.Service {\n\n    async list({ roleId, query, anonymous, page }) {\n      return await this.ctx.meta.user.list({ roleId, query, anonymous, page });\n    }\n\n    async item({ userId }) {\n      return await this.ctx.meta.user.get({ id: userId });\n    }\n\n    async disable({ userId, disabled }) {\n      return await this.ctx.meta.user.disable({ userId, disabled });\n    }\n\n    async delete({ userId }) {\n      return await this.ctx.meta.user.delete({ userId });\n    }\n\n    async roles({ userId, page }) {\n      return await this.ctx.meta.user.roles({ userId, page });\n    }\n\n    async addRole({ userId, roleId }) {\n      return await this.ctx.meta.role.addUserRole({ userId, roleId });\n    }\n\n    async removeRole({ id }) {\n      return await this.ctx.meta.role.deleteUserRole({ id });\n    }\n\n    async atomRights({ userId, page }) {\n      return await this.ctx.meta.role.atomRightsOfUser({ userId, page });\n    }\n\n    async functionRights({ menu, userId, page }) {\n      return await this.ctx.meta.role.functionRightsOfUser({ menu, userId, page });\n    }\n\n\n  }\n\n  return User;\n};\n","module.exports = app => {\n\n  class AtomRight extends app.Service {\n\n    async rights({ roleId, page }) {\n      return await this.ctx.meta.role.roleRights({ roleId, page });\n    }\n\n    async add({ roleId, atomClass, actionCode, scopeSelf, scope }) {\n      const _atomClass = await this.ctx.meta.atomClass.get(atomClass);\n      if (actionCode === 1 || ((actionCode === 3 || actionCode === 4) && scopeSelf)) scope = 0;\n      return await this.ctx.meta.role.addRoleRight({\n        roleId,\n        atomClassId: _atomClass.id,\n        action: actionCode,\n        scope,\n      });\n    }\n\n    async delete({ id }) {\n      return await this.ctx.meta.role.deleteRoleRight({ id });\n    }\n\n    async spreads({ roleId, page }) {\n      return await this.ctx.meta.role.roleSpreads({ roleId, page });\n    }\n\n  }\n\n  return AtomRight;\n};\n","module.exports = app => {\n\n  class FunctionRight extends app.Service {\n\n    async rights({ menu, roleId, page }) {\n      return await this.ctx.meta.role.functionRights({ menu, roleId, page });\n    }\n\n    async add({ roleId, module, name }) {\n      const func = await this.ctx.meta.function.get({ module, name });\n      if (func.autoRight) {\n        return await this.ctx.meta.role.addRoleRight({\n          roleId,\n          atomClassId: func.atomClassId,\n          action: func.action,\n          scope: 0,\n        });\n      }\n      return await this.ctx.meta.role.addRoleFunction({\n        roleId,\n        functionId: func.id,\n        roleRightId: 0,\n      });\n    }\n\n    async delete({ id }) {\n      const sql = `\n        select a.*,b.* from aRoleFunction a \n          left join aFunction b on a.functionId=b.id \n            where a.iid=? and a.id=?\n      `;\n      const roleFunction = await this.ctx.model.queryOne(sql, [ this.ctx.instance.id, id ]);\n      if (roleFunction.autoRight) {\n        return await this.ctx.meta.role.deleteRoleRight({ id: roleFunction.roleRightId });\n      }\n      return await this.ctx.meta.role.deleteRoleFunction({ id });\n    }\n\n    async spreads({ menu, roleId, page }) {\n      return await this.ctx.meta.role.functionSpreads({ menu, roleId, page });\n    }\n\n  }\n\n  return FunctionRight;\n};\n","const require3 = require('require3');\nconst mparse = require3('egg-born-mparse').default;\n\nmodule.exports = app => {\n\n  class Auth extends app.Service {\n\n    async list() {\n      // list\n      const list = await this.ctx.model.authProvider.select();\n      // meta\n      const authProviders = this.ctx.meta.base.authProviders();\n      for (const item of list) {\n        const key = `${item.module}:${item.providerName}`;\n        const authProvider = authProviders[key];\n        item.meta = authProvider.meta;\n      }\n      // ok\n      return list;\n    }\n\n    async disable({ id, disabled }) {\n      await this.ctx.model.authProvider.update({ id, disabled });\n    }\n\n    async item({ id }) {\n      // item\n      const item = await this.ctx.model.authProvider.get({ id });\n      // meta\n      const authProviders = this.ctx.meta.base.authProviders();\n      const authProvider = authProviders[`${item.module}:${item.providerName}`];\n      if (authProvider.meta.mode === 'redirect') {\n        const moduleInfo = mparse.parseInfo(item.module);\n        const loginURL = this.ctx.meta.base.getAbsoluteUrl(`/api/${moduleInfo.url}/passport/${item.module}/${item.providerName}`);\n        const callbackURL = this.ctx.meta.base.getAbsoluteUrl(`/api/${moduleInfo.url}/passport/${item.module}/${item.providerName}/callback`);\n        item._meta = {\n          loginURL,\n          callbackURL,\n        };\n      }\n      // ok\n      return item;\n    }\n\n    async save({ id, config }) {\n      await this.ctx.model.authProvider.update({ id, config: JSON.stringify(config) });\n    }\n\n  }\n\n  return Auth;\n};\n","const authProvider = require('./model/authProvider.js');\n\nmodule.exports = app => {\n  const models = {\n    authProvider,\n  };\n  return models;\n};\n","module.exports = app => {\n\n  class AuthProvider extends app.meta.Model {\n\n    constructor(ctx) {\n      super(ctx, { table: 'aAuthProvider', options: { disableDeleted: true } });\n    }\n\n  }\n\n  return AuthProvider;\n};\n","const require3 = require('require3');\nconst extend = require3('extend2');\n\nmodule.exports = app => {\n  // schemas\n  const schemas = require('./config/validation/schemas.js')(app);\n  // meta\n  const meta = {\n    base: {\n      functions: {\n        user: {\n          title: 'User Management',\n          scene: 'tools',\n          actionPath: 'user/list',\n          sorting: 11,\n          menu: 1,\n        },\n        role: {\n          title: 'Role Management',\n          scene: 'tools',\n          actionPath: 'role/list',\n          sorting: 12,\n          menu: 1,\n        },\n        atomRight: {\n          title: 'Atom Right Management',\n          scene: 'tools',\n          actionPath: 'atomRight/list',\n          sorting: 13,\n          menu: 1,\n        },\n        menuRight: {\n          title: 'Menu Right Management',\n          scene: 'tools',\n          actionPath: 'menuRight/list',\n          sorting: 14,\n          menu: 1,\n        },\n        functionRight: {\n          title: 'Function Right Management',\n          scene: 'tools',\n          actionPath: 'functionRight/list',\n          sorting: 15,\n          menu: 1,\n        },\n        auth: {\n          title: 'Auth Management',\n          scene: 'tools',\n          actionPath: 'auth/list',\n          sorting: 16,\n          menu: 1,\n        },\n      },\n    },\n    validation: {\n      validators: {\n        role: {\n          schemas: 'role',\n        },\n        auth: {\n          schemas: 'auth',\n        },\n      },\n      keywords: {},\n      schemas: {\n        role: schemas.role,\n        auth: schemas.auth,\n      },\n    },\n  };\n\n  return meta;\n};\n","module.exports = app => {\n  const schemas = {};\n  // role\n  schemas.role = {\n    type: 'object',\n    properties: {\n      roleName: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Role name',\n        notEmpty: true,\n      },\n      leader: {\n        type: 'number',\n        ebType: 'toggle',\n        ebTitle: 'Leader',\n      },\n      sorting: {\n        type: 'number',\n        ebType: 'text',\n        ebTitle: 'Sorting',\n      },\n    },\n  };\n  // auth\n  schemas.auth = {\n    type: 'object',\n    properties: {\n      successRedirect: {\n        type: 'boolean',\n        ebType: 'toggle',\n        default: true,\n      },\n      successReturnToOrRedirect: {\n        type: 'boolean',\n        ebType: 'toggle',\n        default: true,\n      },\n      clientID: {\n        type: 'string',\n        ebType: 'text',\n      },\n      clientSecret: {\n        type: 'string',\n        ebType: 'text',\n      },\n    },\n  };\n  return schemas;\n};\n"],"sourceRoot":""}